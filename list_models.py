"""
Script pour lister tous les mod√®les Groq disponibles
"""

from groq import Groq
import os
from dotenv import load_dotenv

# Charger les variables d'environnement
load_dotenv()


def list_available_models():
    """Liste tous les mod√®les Groq disponibles."""

    api_key = os.getenv("GROQ_API_KEY")

    if not api_key:
        print("‚ùå ERREUR: Cl√© API Groq manquante!")
        print("Cr√©ez un fichier .env avec: GROQ_API_KEY=votre_cl√©")
        return

    try:
        print("üîç Connexion √† Groq...")
        client = Groq(api_key=api_key)

        print("üì° R√©cup√©ration de la liste des mod√®les...")
        models = client.models.list()

        print("\n‚úÖ MOD√àLES GROQ DISPONIBLES:")
        print("=" * 50)

        for i, model in enumerate(models.data, 1):
            print(f"{i:2d}. {model.id}")
            if hasattr(model, 'created'):
                print(f"    Cr√©√©: {model.created}")
            if hasattr(model, 'owned_by'):
                print(f"    Propri√©taire: {model.owned_by}")
            print()

        print(f"üìä Total: {len(models.data)} mod√®les disponibles")

        # Suggestions bas√©es sur les noms courants
        print("\nüí° SUGGESTIONS POUR VOTRE APPLICATION:")
        print("=" * 50)

        recommended = []
        for model in models.data:
            model_id = model.id.lower()
            if 'llama' in model_id and ('70b' in model_id or '8b' in model_id):
                recommended.append(model.id)
            elif 'mixtral' in model_id:
                recommended.append(model.id)
            elif 'gemma' in model_id:
                recommended.append(model.id)

        if recommended:
            print("üéØ Mod√®les recommand√©s pour l'extraction de donn√©es:")
            for i, model in enumerate(recommended, 1):
                print(f"  {i}. {model}")

        print(f"\nüìã Pour utiliser un mod√®le, copiez son nom exact dans config.py")
        print(f"Exemple: MODEL_NAME = \"{models.data[0].id if models.data else 'model_name'}\"")

    except Exception as e:
        print(f"‚ùå ERREUR: {str(e)}")
        print("V√©rifiez votre cl√© API et votre connexion internet.")


if __name__ == "__main__":
    list_available_models()